{"ast":null,"code":"var _jsxFileName = \"/media/shafiq/1dc93121-d7bd-4a35-9f08-ba470eb1da82/react-devskill/todo/src/Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = styled('div')`\n  padding-top: 20px;\n`;\n_c = TaskInput;\nconst TaskContent = styled.div`\n  border: 1px solid #ddd;\n  min-height: 200px;\n  padding: 10px;\n  margin: 20px;\n  max-width:600px;\n  margin:0 auto;\n`;\n_c2 = TaskContent;\nconst ButtonContent = styled(Button)`\n  height: 55px;\n`;\n_c3 = ButtonContent;\n\nconst Task = () => {\n  _s();\n\n  let taskData = {\n    name: \"\",\n    id: 0\n  };\n  const [submitName, setSubmitName] = useState(\"Add Task\");\n  const [task, setTask] = useState(taskData);\n  const [taskList, setTaskList] = useState([]);\n\n  const addTaskList = () => {\n    debugger;\n\n    if (task.name.length > 0) {\n      if (task.id < 1) {\n        taskData = {\n          name: task.name,\n          id: taskList.length + 1\n        };\n        setTaskList(taskList => [...taskList, taskData]);\n      } else {\n        taskList.map((element, i) => {\n          if (element.id === task.id) {\n            element.name = task.name;\n          }\n        });\n        setTaskList(taskList => [...taskList]);\n      }\n\n      clearData();\n    }\n  };\n\n  const clearData = () => {\n    let taskData = {\n      name: \"\",\n      id: 0\n    };\n    setTask(taskData);\n    setSubmitName(\"Add Task\");\n  };\n\n  const deleteTaskList = (data, index) => {\n    debugger;\n\n    if (data) {\n      taskList.splice(index, 1);\n      setTaskList(taskList => [...taskList]);\n    }\n  };\n\n  const editTaskList = (data, index) => {\n    debugger;\n\n    if (data) {\n      setTask(data);\n      setSubmitName(\"Update Task\");\n    }\n  };\n\n  const handleChange = e => {\n    debugger;\n    const {\n      name,\n      value\n    } = e.target;\n    setTask(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TaskContent, {\n        children: [taskList.length > 0 ? /*#__PURE__*/_jsxDEV(TaskList, {\n          taskList: taskList,\n          deleteTaskList: deleteTaskList,\n          editTaskList: editTaskList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(TaskInput, {\n          style: {\n            dispaly: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-search\",\n                label: \"Task\",\n                type: \"text\",\n                fullWidth: true,\n                onChange: handleChange,\n                value: task.name,\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(ButtonContent, {\n                variant: \"outlined\",\n                onClick: () => addTaskList(),\n                children: submitName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"X4tye34DscaeQxjpBWP1h9JQoWU=\");\n\n_c4 = Task;\nexport default Task;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TaskInput\");\n$RefreshReg$(_c2, \"TaskContent\");\n$RefreshReg$(_c3, \"ButtonContent\");\n$RefreshReg$(_c4, \"Task\");","map":{"version":3,"sources":["/media/shafiq/1dc93121-d7bd-4a35-9f08-ba470eb1da82/react-devskill/todo/src/Task.jsx"],"names":["Button","Grid","TextField","React","useState","styled","TaskList","TaskInput","TaskContent","div","ButtonContent","Task","taskData","name","id","submitName","setSubmitName","task","setTask","taskList","setTaskList","addTaskList","length","map","element","i","clearData","deleteTaskList","data","index","splice","editTaskList","handleChange","e","value","target","prevState","dispaly","justifyContent"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TaskList from './TaskList';\r\n\r\nconst TaskInput = styled('div')`\r\n  padding-top: 20px;\r\n`\r\nconst TaskContent = styled.div`\r\n  border: 1px solid #ddd;\r\n  min-height: 200px;\r\n  padding: 10px;\r\n  margin: 20px;\r\n  max-width:600px;\r\n  margin:0 auto;\r\n`\r\nconst ButtonContent = styled(Button)`\r\n  height: 55px;\r\n`\r\n\r\n\r\nconst Task = () => {\r\n  let taskData = {\r\n    name: \"\",\r\n    id: 0\r\n  }\r\n  const [submitName, setSubmitName] = useState(\"Add Task\");\r\n  const [task, setTask] = useState(taskData);\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  const addTaskList = () =>{\r\n    debugger\r\n    if (task.name.length > 0) {\r\n      if (task.id < 1) {\r\n        taskData = {\r\n          name: task.name,\r\n          id: taskList.length + 1\r\n        }\r\n        setTaskList(taskList => [...taskList, taskData]);\r\n  \r\n      }else{\r\n        taskList.map((element, i) => {\r\n          if (element.id === task.id) {\r\n            element.name = task.name;\r\n          }          \r\n        });\r\n        setTaskList(taskList => [...taskList]);\r\n      }\r\n      clearData();\r\n      \r\n    }\r\n  }\r\n  const clearData = () => {\r\n    let taskData = {\r\n      name: \"\",\r\n      id: 0\r\n    }\r\n    setTask(taskData);\r\n    setSubmitName(\"Add Task\");\r\n  }\r\n  const deleteTaskList = (data, index) => {\r\n    debugger;\r\n    if (data) {\r\n      taskList.splice(index, 1);\r\n      setTaskList(taskList => [...taskList]);\r\n    }\r\n  }\r\n  const editTaskList = (data, index) => {\r\n    debugger;\r\n    if (data) {\r\n      setTask(data);\r\n      setSubmitName(\"Update Task\");\r\n    }\r\n  }\r\n  const handleChange = (e) =>{\r\n    debugger\r\n    const { name, value } = e.target;\r\n    setTask(prevState => ({\r\n        ...prevState,\r\n        [name]: value\r\n    }));\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TaskContent>\r\n            {\r\n              taskList.length > 0 ? <TaskList taskList={taskList} deleteTaskList={deleteTaskList}\r\n              editTaskList={editTaskList} /> : \"\"\r\n            }\r\n            \r\n\r\n            <TaskInput style={{dispaly:'flex', justifyContent:'center'}}>\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10}>\r\n                  <TextField id=\"outlined-search\" label=\"Task\" type=\"text\" fullWidth \r\n                  onChange={handleChange} value={task.name} name=\"name\" />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <ButtonContent variant=\"outlined\" onClick={() => addTaskList()}>{submitName}</ButtonContent>\r\n                </Grid>\r\n              </Grid>\r\n            </TaskInput>\r\n          </TaskContent>\r\n\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Task"]},"metadata":{},"sourceType":"module"}