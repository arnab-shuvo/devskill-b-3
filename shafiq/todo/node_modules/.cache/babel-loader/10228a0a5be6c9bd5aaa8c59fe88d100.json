{"ast":null,"code":"var _jsxFileName = \"/media/shafiq/1dc93121-d7bd-4a35-9f08-ba470eb1da82/personal/react/devskill-b-3/shafiq/todo/src/Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = styled(\"div\")`\n  padding-bottom: 20px;\n`;\n_c = TaskInput;\nconst TaskContent = styled.div`\n  border: 1px solid #ddd;\n  min-height: 200px;\n  padding: 10px;\n  margin: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n  margin-top: 50px;\n`;\n_c2 = TaskContent;\nconst ButtonContent = styled(Button)`\n  height: 55px;\n`;\n_c3 = ButtonContent;\n\nconst Task = () => {\n  _s();\n\n  let taskData = {\n    name: \"\",\n    id: 0\n  };\n  const [submitName, setSubmitName] = useState(\"Add Task\");\n  const [task, setTask] = useState(taskData);\n  const [error, setError] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const helpText = \"Please enter task\";\n\n  const addTaskList = () => {\n    if (task.name.length > 0) {\n      if (task.id < 1) {\n        taskData = {\n          name: task.name,\n          id: taskList.length + 1\n        };\n        setTaskList(taskList => [...taskList, taskData]);\n      } else {\n        taskList.map((element, i) => {\n          if (element.id === task.id) {\n            element.name = task.name;\n          }\n        });\n        setTaskList(taskList => [...taskList]);\n      }\n\n      clearData();\n    } else {\n      setError(true);\n    }\n  };\n\n  const clearData = () => {\n    let taskData = {\n      name: \"\",\n      id: 0\n    };\n    setTask(taskData);\n    setSubmitName(\"Add Task\");\n  };\n\n  const deleteTaskList = (data, index) => {\n    debugger;\n\n    if (data) {\n      taskList.splice(index, 1);\n      setTaskList(taskList => [...taskList]);\n    }\n  };\n\n  const editTaskList = (data, index) => {\n    debugger;\n\n    if (data) {\n      setTask(data);\n      setSubmitName(\"Update Task\");\n    }\n  };\n\n  const handleChange = e => {\n    setTask(e.target.value); // const { name, value } = e.target;\n    // setError(false);\n    // setTask((prevState) => ({\n    //   ...prevState\n    // }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TaskContent, {\n        children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-search\",\n                label: \"Task\",\n                type: \"text\",\n                fullWidth: true,\n                error: error,\n                helperText: error ? helpText : \"\",\n                onChange: handleChange,\n                value: task.name,\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(ButtonContent, {\n                variant: \"outlined\",\n                onClick: () => addTaskList(),\n                children: submitName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), taskList.length > 0 ? /*#__PURE__*/_jsxDEV(TaskList, {\n          taskList: taskList,\n          deleteTaskList: deleteTaskList,\n          editTaskList: editTaskList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"StTItcpNVnd695QbmqrKqFUhT8M=\");\n\n_c4 = Task;\nexport default Task;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TaskInput\");\n$RefreshReg$(_c2, \"TaskContent\");\n$RefreshReg$(_c3, \"ButtonContent\");\n$RefreshReg$(_c4, \"Task\");","map":{"version":3,"sources":["/media/shafiq/1dc93121-d7bd-4a35-9f08-ba470eb1da82/personal/react/devskill-b-3/shafiq/todo/src/Task.jsx"],"names":["Button","Grid","TextField","React","useState","styled","TaskList","TaskInput","TaskContent","div","ButtonContent","Task","taskData","name","id","submitName","setSubmitName","task","setTask","error","setError","taskList","setTaskList","helpText","addTaskList","length","map","element","i","clearData","deleteTaskList","data","index","splice","editTaskList","handleChange","e","target","value"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst TaskInput = styled(\"div\")`\r\n  padding-bottom: 20px;\r\n`;\r\nconst TaskContent = styled.div`\r\n  border: 1px solid #ddd;\r\n  min-height: 200px;\r\n  padding: 10px;\r\n  margin: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n`;\r\nconst ButtonContent = styled(Button)`\r\n  height: 55px;\r\n`;\r\n\r\nconst Task = () => {\r\n  let taskData = {\r\n    name: \"\",\r\n    id: 0,\r\n  };\r\n\r\n  const [submitName, setSubmitName] = useState(\"Add Task\");\r\n  const [task, setTask] = useState(taskData);\r\n  const [error, setError] = useState(false);\r\n  const [taskList, setTaskList] = useState([]);\r\n  const helpText = \"Please enter task\";\r\n  const addTaskList = () => {\r\n    if (task.name.length > 0) {\r\n      if (task.id < 1) {\r\n        taskData = {\r\n          name: task.name,\r\n          id: taskList.length + 1,\r\n        };\r\n        setTaskList((taskList) => [...taskList, taskData]);\r\n      } else {\r\n        taskList.map((element, i) => {\r\n          if (element.id === task.id) {\r\n            element.name = task.name;\r\n          }\r\n        });\r\n        setTaskList((taskList) => [...taskList]);\r\n      }\r\n      clearData();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const clearData = () => {\r\n    let taskData = {\r\n      name: \"\",\r\n      id: 0,\r\n    };\r\n    setTask(taskData);\r\n    setSubmitName(\"Add Task\");\r\n  };\r\n  const deleteTaskList = (data, index) => {\r\n    debugger;\r\n    if (data) {\r\n      taskList.splice(index, 1);\r\n      setTaskList((taskList) => [...taskList]);\r\n    }\r\n  };\r\n  const editTaskList = (data, index) => {\r\n    debugger;\r\n    if (data) {\r\n      setTask(data);\r\n      setSubmitName(\"Update Task\");\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setTask(e.target.value);\r\n    // const { name, value } = e.target;\r\n    // setError(false);\r\n    // setTask((prevState) => ({\r\n    //   ...prevState\r\n    // }));\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <TaskContent>\r\n          <TaskInput>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  id=\"outlined-search\"\r\n                  label=\"Task\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  error={error}\r\n                  helperText={error ? helpText : \"\"}\r\n                  onChange={handleChange}\r\n                  value={task.name}\r\n                  name=\"name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <ButtonContent variant=\"outlined\" onClick={() => addTaskList()}>\r\n                  {submitName}\r\n                </ButtonContent>\r\n              </Grid>\r\n            </Grid>\r\n          </TaskInput>\r\n\r\n          {taskList.length > 0 ? (\r\n            <TaskList taskList={taskList} deleteTaskList={deleteTaskList} editTaskList={editTaskList} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </TaskContent>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}